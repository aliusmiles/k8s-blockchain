---
apiVersion: v1
kind: Service
metadata:
  name: blockscout
  labels:
    app.kubernetes.io/name: blockscout
  namespace: quorum
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: blockscout
  ports:
    - name: http
      port: 4000
      targetPort: http
      protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: blockscout
  labels:
    app.kubernetes.io/name: blockscout
  namespace: quorum
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app.kubernetes.io/name: blockscout
  serviceName: blockscout
  template:
    metadata:
      labels:
        app.kubernetes.io/name: blockscout
    spec:
      containers:
      - name: postgresql
        image: postgres:13.6-alpine
        imagePullPolicy: "IfNotPresent"
        env:
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "postgres"
          - name: POSTGRES_HOST_AUTH_METHOD
            value: "trust"
        ports:
          - name: tcp-postgresql
            containerPort: 5432
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
        volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
      - name: blockscout
        image: blockscout/blockscout:4.1.3
        imagePullPolicy: IfNotPresent
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: PORT
            value: "4000"
          - name: ECTO_USE_SSL
            value: "false"
          - name: DATABASE_URL
            value: postgresql://postgres:postgres@localhost:5432/blockscout?ssl=false
          - name: NETWORK
            value: quorum
          - name: SUBNETWORK
            value: quorum
          - name: CHAIN_ID
            value: "1337"
          - name: SHOW_ADDRESS_MARKETCAP_PERCENTAGE
            value: "false"
          - name: DISABLE_EXCHANGE_RATES
            value: "true"
          - name: SHOW_PRICE_CHART
            value: "false"
          # - name: BLOCK_TRANSFORMER
          #   value: clique
          - name: ETHEREUM_JSONRPC_VARIANT
            value: geth
          - name: ETHEREUM_JSONRPC_TRANSPORT
            value: http
          - name: ETHEREUM_JSONRPC_HTTP_URL
            value: http://validator:8545
          - name: ETHEREUM_JSONRPC_TRACE_URL
            value: http://validator:8545
          - name: ETHEREUM_JSONRPC_WS_URL
            value: ws://validator:8546
        ports:
          - name: http
            containerPort: 4000
            protocol: TCP
        command:
          - /bin/sh
          - -c
        args:
          - |
            cd /opt/app/ && mix do ecto.create, ecto.migrate; mix phx.server;

  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: blockscout
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: '1Gi'

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: blockscout
  namespace: quorum
spec:
  ingressClassName: nginx
  rules:
    - host: blockscout.vcap.me
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: blockscout
                port:
                  number: 4000
